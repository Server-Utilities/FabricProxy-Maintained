plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Bundle necessary Fabric API module
    modImplementation fabricApi.module("fabric-networking-api-v1", project.fabric_version)
    shadow fabricApi.module("fabric-api-base", project.fabric_version)
    shadow fabricApi.module("fabric-networking-api-v1", project.fabric_version)

    implementation(files("libs/TheBase.jar"))
    shadow(files("libs/TheBase.jar"))
    annotationProcessor(files("libs/TheBase.jar"))
    compileOnly(annotationProcessor("org.projectlombok:lombok:1.18.24"))
}

shadowJar {
    minimize()
    classifier("shadow")
    configurations = [project.configurations.shadow]
    from sourceSets.main.output
}

remapJar {
    from zipTree(shadowJar.archiveFile) dependsOn shadowJar
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
    }
}


wrapper {
    gradleVersion = "7.5.1"
    distributionType = Wrapper.DistributionType.ALL
}